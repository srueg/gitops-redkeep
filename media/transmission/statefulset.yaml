apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: transmission
  namespace: plex
  labels:
    app.kubernetes.io/name: transmission
    app.kubernetes.io/instance: transmission
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: transmission
      app.kubernetes.io/instance: transmission
  serviceName: ""
  template:
    metadata:
      labels:
        app.kubernetes.io/name: transmission
        app.kubernetes.io/instance: transmission
    spec:
      containers:
        - name: oauth-proxy
          image: quay.io/oauth2-proxy/oauth2-proxy:v7.1.3@sha256:ecd26b74a01f2b547ddaed4d32d35f8f5e09c378d5c1fc6cfa63f0adf659ac2b
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 4180
            name: http
          args:
          - --http-address=:4180
          - --https-address=
          - --provider=keycloak
          - --keycloak-group=/admin
          - --email-domain=*
          - --scope=openid profile email
          - --login-url=https://sso.srueg.ch/auth/realms/lab/protocol/openid-connect/auth
          - --redeem-url=https://sso.srueg.ch/auth/realms/lab/protocol/openid-connect/token
          - --validate-url=https://sso.srueg.ch/auth/realms/lab/protocol/openid-connect/userinfo
          - --upstream=http://localhost:9091
          - --reverse-proxy
          - --silence-ping-logging
          - --cookie-expire=1h
          - --skip-provider-button
          env:
          - name: OAUTH2_PROXY_CLIENT_ID
            value: transmission
          - name: OAUTH2_PROXY_COOKIE_SAMESITE
            value: lax
          - name: OAUTH2_PROXY_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: transmission-oauth
                key: client-secret
          - name: OAUTH2_PROXY_COOKIE_SECRET
            valueFrom:
              secretKeyRef:
                name: transmission-oauth
                key: cookie-secret
          livenessProbe:
            initialDelaySeconds: 30
            httpGet:
              path: /ping
              port: http
          readinessProbe:
            httpGet:
              path: /ping
              port: http
        - name: transmission
          image: docker.io/linuxserver/transmission:3.00-r2-ls94@sha256:5da00ad0a6b6bd6f17c5493d801fce1653bc73cb7221805c489da01c48c906f4
          imagePullPolicy: IfNotPresent
          env:
            - name: PUID
              value: "10001"
            - name: PGID
              value: "10001"
            - name: TZ
              value: "Europe/Zurich"
            - name: TRANSMISSION_WEB_HOME
              value: "/combustion-release/"
            - name: USER
              value: ""
            - name: PASS
              value: ""
          volumeMounts:
            - mountPath: /config/
              name: config
              subPath: config/
            - mountPath: /watch/
              name: config
              subPath: watch/
            - mountPath: /downloads/
              name: plex
              subPath: addons/transmission/
          ports:
            - name: transmission
              containerPort: 9091
          livenessProbe:
            httpGet:
              path: /transmission/web/
              port: transmission
            initialDelaySeconds: 60
          readinessProbe:
            httpGet:
              path: /transmission/web/
              port: transmission
      terminationGracePeriodSeconds: 60
      volumes:
        - name: plex
          persistentVolumeClaim:
            claimName: plex-data
        - name: config
          persistentVolumeClaim:
            claimName: transmission-config
