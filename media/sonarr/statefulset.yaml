apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: sonarr
  namespace: plex
  labels:
    app.kubernetes.io/name: sonarr
    app.kubernetes.io/instance: sonarr
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: sonarr
      app.kubernetes.io/instance: sonarr
  serviceName: ""
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sonarr
        app.kubernetes.io/instance: sonarr
    spec:
      containers:
        - name: oauth-proxy
          image: quay.io/oauth2-proxy/oauth2-proxy:v6.1.1@sha256:791aef35b8d1d2a325028b188d5a650605d69985a0dab1233c06079e7321eee0
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 4180
            name: http
          args:
          - --http-address=:4180
          - --https-address=
          - --provider=keycloak
          - --keycloak-group=/admin
          - --email-domain=*
          - --scope=openid profile email
          - --login-url=https://sso.srueg.ch/auth/realms/lab/protocol/openid-connect/auth
          - --redeem-url=https://sso.srueg.ch/auth/realms/lab/protocol/openid-connect/token
          - --validate-url=https://sso.srueg.ch/auth/realms/lab/protocol/openid-connect/userinfo
          - --upstream=http://localhost:8989
          - --reverse-proxy
          - --silence-ping-logging
          - --cookie-expire=1h
          - --skip-provider-button
          env:
          - name: OAUTH2_PROXY_CLIENT_ID
            value: sonarr
          - name: OAUTH2_PROXY_COOKIE_SAMESITE
            value: lax
          - name: OAUTH2_PROXY_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: sonarr-oauth
                key: client-secret
          - name: OAUTH2_PROXY_COOKIE_SECRET
            valueFrom:
              secretKeyRef:
                name: sonarr-oauth
                key: cookie-secret
          livenessProbe:
            initialDelaySeconds: 30
            httpGet:
              path: /ping
              port: http
          readinessProbe:
            httpGet:
              path: /ping
              port: http
        - name: sonarr
          image: docker.io/linuxserver/sonarr:2.0.0.5344-ls97@sha256:e560c7cc2d9258869ab0bdfa643fbe94cffe253de714f9ce374814a4fe2fc787
          imagePullPolicy: IfNotPresent
          env:
            - name: PUID
              value: "10001"
            - name: PGID
              value: "10001"
            - name: TZ
              value: "Europe/Zurich"
          volumeMounts:
            - mountPath: /config/
              name: config
            - mountPath: /addons/
              name: plex
              subPath: addons/
            - mountPath: /tv/
              name: plex
              subPath: Series/
              mountPropagation: HostToContainer
          ports:
            - name: sonarr
              containerPort: 8989
          livenessProbe:
            httpGet:
              path: /login
              port: sonarr
            initialDelaySeconds: 60
          readinessProbe:
            httpGet:
              path: /login
              port: sonarr
      terminationGracePeriodSeconds: 60
      volumes:
        - name: plex
          persistentVolumeClaim:
            claimName: plex-data
        - name: config
          persistentVolumeClaim:
            claimName: sonarr-config
